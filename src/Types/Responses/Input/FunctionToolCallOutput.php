<?php

namespace AssistantEngine\OpenAI\Types\Responses\Input;

use AssistantEngine\OpenAI\Contracts\HydratableInterface;

class FunctionToolCallOutput  implements HydratableInterface
{
    public const STATUS_IN_PROGRESS = 'in_progress';
    public const STATUS_COMPLETED   = 'completed';
    public const STATUS_INCOMPLETE  = 'incomplete';

    /**
     * The unique ID of the function tool call generated by the model.
     *
     * @var string
     */
    public string $call_id;

    /**
     * A JSON string of the output of the function tool call.
     *
     * @var string
     */
    public string $output;

    /**
     * The type of the function tool call output.
     * Always set to `function_call_output`.
     *
     * @var string
     */
    public string $type;

    /**
     * The unique ID of the function tool call output.
     *
     * @var string|null
     */
    public ?string $id = null;

    /**
     * The status of the function call.
     * One of `in_progress`, `completed`, or `incomplete`.
     *
     * @var string|null
     */
    public ?string $status = null;

    public function __construct()
    {
        $this->type = 'function_call_output';
    }

    public static function fromArray(array $data): self
    {
        if (!isset($data['call_id'], $data['output'])) {
            throw new \Exception("Missing required fields for FunctionToolCallOutput.");
        }

        $instance = new self();
        $instance->call_id = $data['call_id'];
        $instance->output = $data['output'];
        $instance->type = $data['type'] ?? 'function_call_output';
        $instance->id = $data['id'] ?? null;
        $instance->status = $data['status'] ?? null;
        return $instance;
    }

    public function getType(): string
    {
        return $this->type;
    }
}